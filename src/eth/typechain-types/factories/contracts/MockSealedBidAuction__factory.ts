/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockSealedBidAuction,
  MockSealedBidAuctionInterface,
} from "../../contracts/MockSealedBidAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "AuctionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "winningBid",
        type: "uint256",
      },
    ],
    name: "AuctionEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "BidCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "BidRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auctions",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "biddingEnded",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "ended",
        type: "bool",
      },
      {
        internalType: "address",
        name: "highestBidder",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "highestBid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "commitBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "minBid",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "createAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "endAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "endBidding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "getAuctionBidders",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "getBidHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bidder",
        type: "address",
      },
    ],
    name: "getRevealedBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bidAmount",
        type: "uint256",
      },
    ],
    name: "revealBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816041565b506091565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611262806100a06000396000f3fe6080604052600436106100c25760003560e01c80637a9353701161007f578063c8e4180711610059578063c8e4180714610204578063df2764691461024b578063e44d774d14610278578063f2fde38b1461028b57600080fd5b80637a9353701461019c5780638da5cb5b146101bc578063b9a2de3a146101e457600080fd5b8063093755ad146100c75780632ad71573146100e957806330a575f414610112578063571a26a01461013257806361e2db5514610167578063715018a614610187575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610d88565b6102ab565b005b3480156100f557600080fd5b506100ff60015481565b6040519081526020015b60405180910390f35b34801561011e57600080fd5b506100ff61012d366004610dbd565b6103bc565b34801561013e57600080fd5b5061015261014d366004610d88565b6103e9565b60405161010999989796959493929190610e2f565b34801561017357600080fd5b506100e7610182366004610f42565b610558565b34801561019357600080fd5b506100e761060a565b3480156101a857600080fd5b506100e76101b7366004610fbb565b61061e565b3480156101c857600080fd5b506000546040516001600160a01b039091168152602001610109565b3480156101f057600080fd5b506100e76101ff366004610d88565b6107e6565b34801561021057600080fd5b506100ff61021f366004610dbd565b60008281526002602090815260408083206001600160a01b038516845260070190915290205492915050565b34801561025757600080fd5b5061026b610266366004610d88565b6109bd565b6040516101099190610fdd565b6100e7610286366004610fbb565b610a2c565b34801561029757600080fd5b506100e76102a6366004611029565b610bbb565b600081815260026020526040902060030154819042106102e65760405162461bcd60e51b81526004016102dd9061104b565b60405180910390fd5b60008281526002602052604090206004810154600160a01b900460ff16156103485760405162461bcd60e51b8152602060048201526015602482015274109a59191a5b99c8185b1c9958591e48195b991959605a1b60448201526064016102dd565b60048101546001600160a01b031633146103a45760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792073656c6c65722063616e20656e642062696464696e67000000000060448201526064016102dd565b600401805460ff60a01b1916600160a01b1790555050565b60008281526002602090815260408083206001600160a01b03851684526008019091529020545b92915050565b60026020526000908152604090208054819061040490611076565b80601f016020809104026020016040519081016040528092919081815260200182805461043090611076565b801561047d5780601f106104525761010080835404028352916020019161047d565b820191906000526020600020905b81548152906001019060200180831161046057829003601f168201915b50505050509080600101805461049290611076565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90611076565b801561050b5780601f106104e05761010080835404028352916020019161050b565b820191906000526020600020905b8154815290600101906020018083116104ee57829003601f168201915b5050506002840154600385015460048601546005870154600690970154959692959194506001600160a01b03808216945060ff600160a01b8304811694600160a81b909304169291169089565b6001805460009182610569836110c6565b90915550600081815260026020526040902090915080610589878261112e565b5060018101610598868261112e565b50600281018490556105aa83426111ed565b600382018190556004820180546001600160a01b031916331790556040517f5bf34ed94988e5dcdc7d1faaa54eb1d3b55f45d5f11457e235afb21a8ebbe73c916105fa9185918a91899190611200565b60405180910390a1505050505050565b610612610bf9565b61061c6000610c26565b565b6000828152600260209081526040808320338452600781019092529091205461067c5760405162461bcd60e51b815260206004820152601060248201526f139bc8189a59081d1bc81c995d99585b60821b60448201526064016102dd565b6004810154600160a01b900460ff166106d75760405162461bcd60e51b815260206004820152601d60248201527f41756374696f6e2042696464696e6720686173206e6f7420656e64656400000060448201526064016102dd565b6004810154600160a81b900460ff16156107035760405162461bcd60e51b81526004016102dd9061104b565b3360008181526007830160205260409020549061072290859085610c76565b146107645760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908189a59081c995d99585b60721b60448201526064016102dd565b336000908152600882016020526040902082905560068101548211156107a0576005810180546001600160a01b03191633179055600681018290555b604080518481523360208201529081018390527f86d2fbc9069d34216ebc65b38ce840528d3f8cac0c86d2aaa7ab6a9db8bc35d3906060015b60405180910390a1505050565b60008181526002602052604090206003015481904210156108495760405162461bcd60e51b815260206004820152601760248201527f41756374696f6e206973207374696c6c2061637469766500000000000000000060448201526064016102dd565b60008281526002602052604090206004810154600160a01b900460ff166108aa5760405162461bcd60e51b8152602060048201526015602482015274109a59191a5b99c81a185cc81b9bdd08195b991959605a1b60448201526064016102dd565b6004810154600160a81b900460ff16156108fe5760405162461bcd60e51b8152602060048201526015602482015274105d58dd1a5bdb88185b1c9958591e48195b991959605a1b60448201526064016102dd565b60048101546001600160a01b0316331461095a5760405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792073656c6c65722063616e20656e642061756374696f6e000000000060448201526064016102dd565b60048101805460ff60a81b1916600160a81b17905560058101546006820154604080518681526001600160a01b0390931660208401528201527fd2aa34a4fdbbc6dff6a3e56f46e0f3ae2a31d7785ff3487aa5c95c642acea501906060016107d9565b600081815260026020908152604091829020600901805483518184028101840190945280845260609392830182828015610a2057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610a02575b50505050509050919050565b60008281526002602052604090206003015482904210610a5e5760405162461bcd60e51b81526004016102dd9061104b565b600083815260026020819052604090912090810154831015610ac25760405162461bcd60e51b815260206004820152601b60248201527f4269642069732062656c6f77206d696e696d756d20616d6f756e74000000000060448201526064016102dd565b42816003015411610ae55760405162461bcd60e51b81526004016102dd9061104b565b6004810154600160a01b900460ff1615610b355760405162461bcd60e51b8152602060048201526011602482015270109a59191a5b99c81a185cc8195b991959607a1b60448201526064016102dd565b610b40843385610c76565b3360008181526007840160209081526040808320949094556009850180546001810182559083529181902090910180546001600160a01b031916831790558251878152908101919091527f0934ea4de468dcd0d9a335c5f97aa77955310c29631c93fbd01d95a00242ec41910160405180910390a150505050565b610bc3610bf9565b6001600160a01b038116610bed57604051631e4fbdf760e01b8152600060048201526024016102dd565b610bf681610c26565b50565b6000546001600160a01b0316331461061c5760405163118cdaa760e01b81523360048201526024016102dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600083815260026020526040812082610cdb5760405162461bcd60e51b815260206004820152602160248201527f42696420616d6f756e74206d7573742062652067726561746572207468616e206044820152600360fc1b60648201526084016102dd565b80600201548311610d425760405162461bcd60e51b815260206004820152602b60248201527f42696420616d6f756e74206d7573742062652067726561746572207468616e2060448201526a1b5a5b9a5b5d5b48189a5960aa1b60648201526084016102dd565b6040516bffffffffffffffffffffffff19606086901b16602082015260348101849052605401604051602081830303815290604052805190602001209150509392505050565b600060208284031215610d9a57600080fd5b5035919050565b80356001600160a01b0381168114610db857600080fd5b919050565b60008060408385031215610dd057600080fd5b82359150610de060208401610da1565b90509250929050565b6000815180845260005b81811015610e0f57602081850181015186830182015201610df3565b506000602082860101526020601f19601f83011685010191505092915050565b61012081526000610e4461012083018c610de9565b8281036020840152610e56818c610de9565b604084019a909a52505060608101969096526001600160a01b03948516608087015292151560a086015290151560c085015290911660e08301526101009091015292915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610ec457600080fd5b813567ffffffffffffffff811115610ede57610ede610e9d565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610f0d57610f0d610e9d565b604052818152838201602001851015610f2557600080fd5b816020850160208301376000918101602001919091529392505050565b60008060008060808587031215610f5857600080fd5b843567ffffffffffffffff811115610f6f57600080fd5b610f7b87828801610eb3565b945050602085013567ffffffffffffffff811115610f9857600080fd5b610fa487828801610eb3565b949794965050505060408301359260600135919050565b60008060408385031215610fce57600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b8181101561101e5783516001600160a01b0316835260209384019390920191600101610ff7565b509095945050505050565b60006020828403121561103b57600080fd5b61104482610da1565b9392505050565b602080825260119082015270105d58dd1a5bdb881a185cc8195b991959607a1b604082015260600190565b600181811c9082168061108a57607f821691505b6020821081036110aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016110d8576110d86110b0565b5060010190565b601f82111561112957806000526020600020601f840160051c810160208510156111065750805b601f840160051c820191505b818110156111265760008155600101611112565b50505b505050565b815167ffffffffffffffff81111561114857611148610e9d565b61115c816111568454611076565b846110df565b6020601f82116001811461119057600083156111785750848201515b600019600385901b1c1916600184901b178455611126565b600084815260208120601f198516915b828110156111c057878501518255602094850194600190920191016111a0565b50848210156111de5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103e3576103e36110b0565b8481526080602082015260006112196080830186610de9565b604083019490945250606001529291505056fea26469706673582212204df54ddda4f10d6b29e6e21f7a9c468787b356d932c3f2879a4de6b8cd180b6d64736f6c634300081a0033";

type MockSealedBidAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSealedBidAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSealedBidAuction__factory extends ContractFactory {
  constructor(...args: MockSealedBidAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockSealedBidAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockSealedBidAuction__factory {
    return super.connect(runner) as MockSealedBidAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSealedBidAuctionInterface {
    return new Interface(_abi) as MockSealedBidAuctionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockSealedBidAuction {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockSealedBidAuction;
  }
}
